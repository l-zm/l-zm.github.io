{"title":"Centos 7 安装 Nginx - 配置 & 文件 & 说明","date":"2022-01-22T00:00:00.000Z","date_formatted":{"ll":"2022年1月22日","L":"2022/01/22","MM-DD":"01-22"},"thumbnail":"https://pic.imgdb.cn/item/62d4b8faf54cd3f937795737.png","link":"nginx","tags":["Nginx"],"categories":["Nginx"],"updated":"2022-01-21T16:00:00.000Z","content":"<h3 id=\"nginx-的特点\">Nginx 的特点<a title=\"#nginx-的特点\" href=\"#nginx-的特点\"></a></h3>\n<ul>\n<li>\n<p>是一个高性能的HTTP和反向代理服务器，也是一个IMAP/POP3/SMTP/代理服务器</p>\n</li>\n<li>\n<p>Nginx相较于Apache具有占用内存少，稳定性高等优势，并且依靠并发能力强，丰富的模块库以及友好灵活的配置儿闻名</p>\n</li>\n<li>\n<p>安装基础包<br>\n<code>yum -y install gcc gcc-c++ lrzsz wget vim</code></p>\n</li>\n<li>\n<p>安装完成, 查看gcc版本<br>\n<code>gcc -v</code><br>\n最后一行输出：<code>gcc 版本 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC)</code><br>\n或者输出：<code>gcc version 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC)</code></p>\n</li>\n<li>\n<p>需要安装 spenssl<br>\n<code>yum install -y openssl openssl-devel</code><br>\n如果没有可能会报如下错误：</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure: error: the HTTP rewrite module requires the PCRE library.</span><br><span class=\"line\">You can either disable the module by using --without-http_rewrite_module</span><br><span class=\"line\">option, or install the PCRE library into the system, or build the PCRE library</span><br><span class=\"line\">statically from the source with nginx by using --with-pcre=&lt;path&gt; option.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>获取Nginx<br>\n<code>wget -c https://nginx.org/download/nginx-1.14.0.tar.gz</code></p>\n</li>\n<li>\n<p>解压 &amp; 进入目录<br>\n<code>tar -zxvf nginx-1.14.0.tar.gz</code><br>\n<code>cd nginx-1.14.0</code></p>\n</li>\n<li>\n<p>使用默认位置<br>\n<code>./configure</code></p>\n</li>\n<li>\n<p>编译安装<br>\n<code>make</code><br>\n<code>make install</code></p>\n</li>\n<li>\n<p>找到Nginx的目录<br>\n<code>whereis nginx</code></p>\n</li>\n<li>\n<p>启动Nginx<br>\n<code>/usr/local/nginx/sbin/nginx</code></p>\n</li>\n</ul>\n<h3 id=\"nginx-操作指令\">Nginx 操作指令<a title=\"#nginx-操作指令\" href=\"#nginx-操作指令\"></a></h3>\n<ul>\n<li><code>nginx -c /etc/nginx/nginx.conf (启动Nginx)</code></li>\n<li><code>nginx -s stop (快速停止)</code></li>\n<li><code>nginx -s quit (完整有序的停止)</code></li>\n<li><code>nginx -s reload (重新加载)</code></li>\n<li><code>nginx -s reopen (重新打开日志文件)</code></li>\n<li><code>nginx -s quit</code></li>\n<li><code>kill -s QUIT 1628</code></li>\n<li><code>ps -ax|grep nginx (获取所有正在运行的Nginx进程列表)</code></li>\n<li><code>nginx -t (验证配置是否有语法错误)</code></li>\n<li><code>nginx -v (查看Nginx的简介版本号)</code></li>\n<li><code>nginx -V (查看Nginx的详细版本号)</code></li>\n<li></li>\n<li><code>/usr/local/nginx/sbin/nginx -t (检查配置文件是否正确)</code></li>\n<li><code>/usr/local/nginx/sbin/nginx -s reload (刷新)</code></li>\n</ul>\n<h3 id=\"获取所有正在运行的nginx进程列表\">获取所有正在运行的Nginx进程列表<a title=\"#获取所有正在运行的nginx进程列表\" href=\"#获取所有正在运行的nginx进程列表\"></a></h3>\n<ul>\n<li><code>ps -ax|grep nginx</code></li>\n</ul>\n<h3 id=\"配置-nginx-开机启动\">配置 Nginx 开机启动<a title=\"#配置-nginx-开机启动\" href=\"#配置-nginx-开机启动\"></a></h3>\n<p>修改权限：<code>chmod 755 /etc/rc.d/rc.local</code><br>\n编辑：<code>vim /etc/rc.d/rc.local</code> 添加 <code>/usr/local/nginx/sbin/nginx</code></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"meta\"># THIS FILE IS ADDED FOR COMPATIBILITY PURPOSES</span></span><br><span class=\"line\"><span class=\"meta\">#</span></span><br><span class=\"line\"><span class=\"meta\"># It is highly advisable to create own systemd services or udev rules</span></span><br><span class=\"line\"><span class=\"meta\"># to run scripts during boot instead of using this file.</span></span><br><span class=\"line\"><span class=\"meta\">#</span></span><br><span class=\"line\"><span class=\"meta\"># In contrast to previous versions due to parallel execution during boot</span></span><br><span class=\"line\"><span class=\"meta\"># this script will NOT be run after all other services.</span></span><br><span class=\"line\"><span class=\"meta\">#</span></span><br><span class=\"line\"><span class=\"meta\"># Please note that you must run &#x27;chmod +x /etc/rc.d/rc.local&#x27; to ensure</span></span><br><span class=\"line\"><span class=\"meta\"># that this script will be executed during boot.</span></span><br><span class=\"line\"></span><br><span class=\"line\">touch /<span class=\"keyword\">var</span>/<span class=\"keyword\">lock</span>/subsys/local</span><br><span class=\"line\">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>\n<h3 id=\"nginx配置文件的结构及说明：\">Nginx配置文件的结构及说明：<a title=\"#nginx配置文件的结构及说明：\" href=\"#nginx配置文件的结构及说明：\"></a></h3>\n<p>Nginx 配置文件由三部分组成</p>\n<ol>\n<li>全局块：主要设置一些影响Nginx服务器整体运行的配置指令。</li>\n<li>Event 块：涉及的指令主要影响Nginx服务器与用户的网络连接</li>\n<li>Http 块：由包括 Http全局块和Server块，是服务器配置中最频繁的部分，包括配置代理、缓存、日志定义等绝大多数功能</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 运行用户</span><br><span class=\"line\">user root;</span><br><span class=\"line\"></span><br><span class=\"line\"># 工作进程的数量 通常设置和CPU数量相等 auto:自动调整</span><br><span class=\"line\">worker_processes auto;</span><br><span class=\"line\"></span><br><span class=\"line\"># 全局的错误日志</span><br><span class=\"line\">error_log /var/log/nginx/error.log;</span><br><span class=\"line\"></span><br><span class=\"line\"># 日志级别, 从左到右(由低到高): debug做详细, crit最少, 默认是: crit</span><br><span class=\"line\"># debug|info|notice|warn|error|crit|alert|emerg:</span><br><span class=\"line\"># 生产场景一般用: warn|error|crit; 注意: 不要配置info级别较低的等级, 会带来大量的磁盘I/O消耗</span><br><span class=\"line\"></span><br><span class=\"line\">#error_log  logs/error.log;</span><br><span class=\"line\">#error_log  logs/error.log  notice;</span><br><span class=\"line\">#error_log  logs/error.log  info;</span><br><span class=\"line\"></span><br><span class=\"line\"># 日志没有配置 默认</span><br><span class=\"line\">#error_log  logs/error.log error;</span><br><span class=\"line\"></span><br><span class=\"line\"># 不记录日志可以这么写</span><br><span class=\"line\">#error_log /dev/null</span><br><span class=\"line\"></span><br><span class=\"line\"># PID文件 记录Nginx主进程的ID号</span><br><span class=\"line\">pid /run/nginx.pid;</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定工作模式及连接数上限</span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t# use 用来指定Nginx的工作模式</span><br><span class=\"line\">\t# Nginx支持的工作模式有select、poll、kqueue、epoll、rtsig和/dev/poll</span><br><span class=\"line\">\t# epoll是多路复用IO(I/O Multiplexing)中的一种方式</span><br><span class=\"line\">    # 仅用于linux2.6以上内核,可以大大提高nginx的性能</span><br><span class=\"line\">    use epoll; </span><br><span class=\"line\"></span><br><span class=\"line\">    # 单个工作进程进程可以允许同时建立外部连接的数量</span><br><span class=\"line\">    # 进程的最大并发连接数: 并发总数 = worker_processes * worker_connections;</span><br><span class=\"line\">    worker_connections 1024;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    include mime.types;</span><br><span class=\"line\">    default_type application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 设定日志格式</span><br><span class=\"line\">    # 格式变量解释：</span><br><span class=\"line\">    # $remote_addr: 记录访问网站的客户端地址</span><br><span class=\"line\">    # $remote_user: 远程客户端用户名</span><br><span class=\"line\">    # $time_local: 记录访问时间和时区</span><br><span class=\"line\">    # $request: 用户的Http请求起始行信息</span><br><span class=\"line\">    # $status: http状态码, 记录请求返回的状态码</span><br><span class=\"line\">    # $body_bytes_sent: 服务器发送给客户端的相应body字节数</span><br><span class=\"line\">    # $http_referer: 记录此次请求是从那个连接访问过来的, 可以根据此参数进行防盗链设置</span><br><span class=\"line\">    # $http_user_agent: 记录客户端访问信息, 例如：浏览器、手机客户端等</span><br><span class=\"line\">    # $http_x_forwarded_for: 当前端有代理服务时, 设置Web节点记录客户端地址的配置, 此参数生效的前提是代理服务器也要进行相关的x_forwarded_for设置</span><br><span class=\"line\">    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class=\"line\">    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class=\"line\">    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 日志文件的路径 及使用何种日志格式记录日志</span><br><span class=\"line\">    #access_log  logs/access.log  main</span><br><span class=\"line\"></span><br><span class=\"line\">    # sendfile 是Linux 2.0+ 以后推出的一个系统调用</span><br><span class=\"line\">    # sendfile 指令指定 nginx 是否调用 sendfile 函数(zero copy 方式)来传输文件</span><br><span class=\"line\">    # 对于普通应用, 必须设为 on</span><br><span class=\"line\">    # 如果用来进行下载等应用磁盘IO重负载应用, 可设置为 off</span><br><span class=\"line\">    # 对比一般的数据网络传输sendfile会有更少的切换和更少的数据拷贝</span><br><span class=\"line\">    # 在nginx配置文件里面, 打开sendfile on选项能够提高 web server 性能</span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 在nginx中, tcp_nopush必须和sendfilep搭配使用, 它可以配置一次发送数据包的大小, 它不是按时间累计0.2秒后发送包, 而是当包累计到一定大小后就发送</span><br><span class=\"line\">    # 在nginx中, tcp_nopush和tcp_nodelay是互斥的</span><br><span class=\"line\">    #tcp_nopush     on;</span><br><span class=\"line\">    #tcp_nodelay     on;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 连接超时时间</span><br><span class=\"line\">    #keepalive_timeout  0;</span><br><span class=\"line\">    keepalive_timeout  65;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 开启 gzip 压缩 (on | off) 默认: off</span><br><span class=\"line\">    gzip  on;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 设置用于处理请求压缩的缓冲区数量和大小</span><br><span class=\"line\">    gzip_buffer  32 4k | 16 8k</span><br><span class=\"line\"></span><br><span class=\"line\">    # 压缩级别(1-9), 越大的压缩率越高, 同时消耗CPU资源也越多</span><br><span class=\"line\">    gzip_comp_level  3;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 压缩协议版本, 默认是1.1 (1.0 | 1.1)</span><br><span class=\"line\">    gzip_http_version  1.1;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 小于1k的资源不压缩</span><br><span class=\"line\">    gzip_min_length  1k;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 当nginx处于反向代理的时候启用(off | expired | no-cache | no-store | private | no_last_modified | no_etag | auth | any ...)</span><br><span class=\"line\">    # off: 禁止所有代理请求的压缩</span><br><span class=\"line\">    # expired: 在Header中包含&#x27;Expires&#x27;头信息, 启用压缩</span><br><span class=\"line\">    # no-cache: 在Header中包含&#x27;Cache-Control:no-cache&#x27;头信息, 启用压缩</span><br><span class=\"line\">    # no-store: 在Header中包含&#x27;Cache-Control:no-store&#x27;头信息, 启用压缩</span><br><span class=\"line\">    # private: 在Header中包含&#x27;Cache-Control:private&#x27;头信息, 启用压缩</span><br><span class=\"line\">    # no_last_modified: 在Header中包含&#x27;Last-Modified&#x27;头信息, 启用压缩</span><br><span class=\"line\">    # no_etag: 在Header中包含&#x27;ETag&#x27;头信息, 启用压缩</span><br><span class=\"line\">    # auth: 在Header中包含&#x27;Authorization&#x27;头信息, 启用压缩</span><br><span class=\"line\">    # any: 无条件压缩所有结果数据</span><br><span class=\"line\">    # 默认: off</span><br><span class=\"line\">    gzip_proxied  off;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 需要压缩哪些响应类型的资源, 多个空格隔开, 不建议压缩图片(mime-type ...)</span><br><span class=\"line\">    # 默认: text/html</span><br><span class=\"line\">    gzip_types  text/plain application/javascript application/x-javascript text/javascript text/xml text/css;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 配置禁用gzip条件, 支持正则, 此处表示IE6以下不开启gzip, 因为低版本的IE不支持</span><br><span class=\"line\">    gzip_disable  &quot;MSIE [1-6].&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 是否添加&quot;Vary:Accept-Encoding&quot;响应头(on | off)</span><br><span class=\"line\">    # 默认: off</span><br><span class=\"line\">    gzip_vary  on;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 设置客户端请求头的缓冲区大小</span><br><span class=\"line\">    client_header_buffer_size  1k;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 读取客户端读取请求头超时时间</span><br><span class=\"line\">    client_header_timeout  60s;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 设置用于读取大型客户端请求头的缓冲区的最大数 和 大小</span><br><span class=\"line\">    large_client_header_buffers 4 8k;</span><br><span class=\"line\">    </span><br><span class=\"line\">    # 隐藏 Nginx 版本号, 默认：on(on | off | build | string)</span><br><span class=\"line\">    server_tokens off;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 设定虚拟主机配置</span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        # 侦听端口</span><br><span class=\"line\">        listen      80 default_server;</span><br><span class=\"line\"></span><br><span class=\"line\">        # 服务的名称: 使用example.net www.example.net访问</span><br><span class=\"line\">        server_name example.net www.example.net;</span><br><span class=\"line\"></span><br><span class=\"line\">        # 设置网站在服务器上的根目录</span><br><span class=\"line\">        root        /data/www</span><br><span class=\"line\"></span><br><span class=\"line\">        # 设置缓冲日志写入的路径 格式 和 配置</span><br><span class=\"line\">        # 默认: access_log logs/access.log combined;</span><br><span class=\"line\">        access_log</span><br><span class=\"line\"></span><br><span class=\"line\">        # 默认请求</span><br><span class=\"line\">        location = / &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            # 定义首页索引文件的名称</span><br><span class=\"line\">            # 默认: index index.html;</span><br><span class=\"line\">            index index.html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        # 定义错误页面</span><br><span class=\"line\">        error_page 404             /404.html;</span><br><span class=\"line\">        error_page 500 502 503 504 /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"location-指令说明\">location 指令说明<a title=\"#location-指令说明\" href=\"#location-指令说明\"></a></h3>\n<ul>\n<li><code>~</code>：表示uri包含正则表达式，且区分大小写</li>\n<li><code>~*</code>：表示uri包含正则表达式，且不区分大小写</li>\n<li><code>=</code>：表示uri不含正则表达式，要求严格匹配</li>\n</ul>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">意思</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>=</code></td>\n<td style=\"text-align:center\">精准 匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>^~</code></td>\n<td style=\"text-align:center\">精准前缀 匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>~</code></td>\n<td style=\"text-align:center\">区分大写的正则匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>~*</code></td>\n<td style=\"text-align:center\">不区分大写的正则匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>/</code></td>\n<td style=\"text-align:center\">通用匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>/uri</code></td>\n<td style=\"text-align:center\">普通前缀 匹配</td>\n</tr>\n</tbody>\n</table></div></div><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># http://localhost/</span><br><span class=\"line\">location = / &#123;</span><br><span class=\"line\">   echo &quot;规则A&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># http://localhost/login</span><br><span class=\"line\">location = /login &#123;</span><br><span class=\"line\">   echo &quot;规则B&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># http://localhost/static/a.html</span><br><span class=\"line\">location ^~ /static/ &#123;</span><br><span class=\"line\">   echo &quot;规则C&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># http://localhost/static/files/a.txt</span><br><span class=\"line\">location ^~ /static/files &#123;</span><br><span class=\"line\">    echo &quot;规则X&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># http://localhost/a.png</span><br><span class=\"line\"># http://localhost/img/a.gif</span><br><span class=\"line\">location ~ \\.(gif|jpg|png|js|css)$ &#123;</span><br><span class=\"line\">   echo &quot;规则D&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># http://localhost/a.PNG</span><br><span class=\"line\">location ~* \\.png$ &#123;</span><br><span class=\"line\">   echo &quot;规则E&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># http://localhost/img/a.tiff</span><br><span class=\"line\">location /img &#123;</span><br><span class=\"line\">    echo &quot;规则Y&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># http://localhost/register</span><br><span class=\"line\">location / &#123;</span><br><span class=\"line\">   echo &quot;规则F&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"nginx配置常见问题：\">Nginx配置常见问题：<a title=\"#nginx配置常见问题：\" href=\"#nginx配置常见问题：\"></a></h3>\n<h4 id=\"nginx一个server配置多个location出现404的问题，配置如下\">Nginx一个server配置多个location出现404的问题，配置如下<a title=\"#nginx一个server配置多个location出现404的问题，配置如下\" href=\"#nginx一个server配置多个location出现404的问题，配置如下\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /urladdress &#123;</span><br><span class=\"line\">    alias  /user/local/urladdress;</span><br><span class=\"line\">    dex  index.html index.htm;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"nginx代理-proxy-pass-配置去除url前缀：\">Nginx代理 proxy pass 配置去除URL前缀：<a title=\"#nginx代理-proxy-pass-配置去除url前缀：\" href=\"#nginx代理-proxy-pass-配置去除url前缀：\"></a></h4>\n<ol>\n<li>第一中方案：proxy_pass后面加根路径\n<ol>\n<li><code>~/api/</code>：表示匹配的是<code>api</code>的请求，proxy_pass的结尾有<code>/</code>,则会把<code>/api/*</code>后面的路径直接拼接到后面，所以移除了api</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ^~/api/ &#123;</span><br><span class=\"line\">    proxy_pass http://0.0.0.0:8080/api/;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>第二种方案：使用：<code>rewrite</code>\n<ol>\n<li>注意：proxy_pass结尾没有<code>/</code>，rewrite重写了URL</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ^~/api/ &#123;</span><br><span class=\"line\">    rewrite ^/api/(.*)$ /$1 break;</span><br><span class=\"line\">    proxy_pass http://0.0.0.0:8080/api;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"乱码问题\">乱码问题<a title=\"#乱码问题\" href=\"#乱码问题\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       80;</span><br><span class=\"line\">    server_name  localhost;</span><br><span class=\"line\">    </span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        # 一般是在个别的location中加入此项，具体情况具体对待</span><br><span class=\"line\">        charset utf-8;</span><br><span class=\"line\">        </span><br><span class=\"line\">        root   html;</span><br><span class=\"line\">        index  index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"错误的将post转换为get请求\">错误的将POST转换为GET请求<a title=\"#错误的将post转换为get请求\" href=\"#错误的将post转换为get请求\"></a></h4>\n<p>域名配置了http强制跳转htpps后发现app发起post请求会出现405错误</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\"> listen 80;</span><br><span class=\"line\"> server_name dev-payment.xxxx.cn;</span><br><span class=\"line\"> return 307 https://dev-payment.xxxx.cn$request_uri;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>关于301和307</p>\n<ul>\n<li>301 Moved Permanently\n<ul>\n<li>被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个 URI 之一</li>\n</ul>\n</li>\n<li>307 Temporary Redirect\n<ul>\n<li>请求的资源现在临时从不同的URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求</li>\n</ul>\n</li>\n</ul>\n<p>从上面我们可以看出，301跳转是永久重定向，而307是临时重定向。这就是301跳转与307跳转两者之间的区别</p>\n","prev":{"title":"iPhone与Windows传输文件的几种方式","link":"iPhone-Windows"},"next":{"title":"WPS 2019 专业增强版 (温州大学教育版)","link":"windows-wps-2019"},"plink":"http://l-zm.com/nginx/","toc":[{"id":"nginx-的特点","title":"Nginx 的特点","index":"1"},{"id":"nginx-操作指令","title":"Nginx 操作指令","index":"2"},{"id":"获取所有正在运行的nginx进程列表","title":"获取所有正在运行的Nginx进程列表","index":"3"},{"id":"配置-nginx-开机启动","title":"配置 Nginx 开机启动","index":"4"},{"id":"nginx配置文件的结构及说明：","title":"Nginx配置文件的结构及说明：","index":"5"},{"id":"location-指令说明","title":"location 指令说明","index":"6"},{"id":"nginx配置常见问题：","title":"Nginx配置常见问题：","index":"7","children":[{"id":"nginx一个server配置多个location出现404的问题，配置如下","title":"Nginx一个server配置多个location出现404的问题，配置如下","index":"7.1"},{"id":"nginx代理-proxy-pass-配置去除url前缀：","title":"Nginx代理 proxy pass 配置去除URL前缀：","index":"7.2"},{"id":"乱码问题","title":"乱码问题","index":"7.3"},{"id":"错误的将post转换为get请求","title":"错误的将POST转换为GET请求","index":"7.4"}]}],"reading_time":"2752 字约 18 分钟"}