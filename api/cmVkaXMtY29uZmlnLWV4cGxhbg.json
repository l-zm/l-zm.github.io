{"title":"Redis 配置文件说明","date":"2022-01-04T00:00:00.000Z","date_formatted":{"ll":"2022年1月4日","L":"2022/01/04","MM-DD":"01-04"},"thumbnail":"https://pic.imgdb.cn/item/626cdd0f239250f7c5494283.png","link":"redis-config-explan","tags":["Redis"],"categories":["Redis"],"updated":"2022-01-03T16:00:00.000Z","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">################################## NETWORK #####################################</span><br><span class=\"line\">bind 127.0.0.1\t\t\t# 默认绑定本机所有ip地址 为了安全 可以只监听内网ip</span><br><span class=\"line\">protected-mode yes\t\t# 保护模式[无密码模式设置为no]</span><br><span class=\"line\">port 6379 \t\t\t# 默认端口</span><br><span class=\"line\">tcp-backlog 511\t\t\t# listen队列的长度</span><br><span class=\"line\">timeout 0\t\t\t# 客户端空闲多少s(秒)后踢掉 0禁止</span><br><span class=\"line\">tcp-keepalive 300\t\t# 检测挂掉的连接 单位s 0禁止</span><br><span class=\"line\">################################# GENERAL #####################################</span><br><span class=\"line\">daemonize no \t\t\t# 作为守护进程运行</span><br><span class=\"line\">supervised no \t\t\t# 设成开机启动后 系统监控</span><br><span class=\"line\">pidfile /var/run/redis_6379.pid # pid 位置</span><br><span class=\"line\">loglevel notice \t\t# 设置服务端的日志级别，有下列几种选择</span><br><span class=\"line\">\t\t\t\tdebug：记录详细信息，用于开发或调试</span><br><span class=\"line\">\t\t\t\tverbose：提供很多有用的信息，</span><br><span class=\"line\">\t\t\t\t\t但是又不像debug那么详尽，默认就是这一选项</span><br><span class=\"line\">\t\t\t\tnotice：适度提醒，多用于产品环境</span><br><span class=\"line\">\t\t\t\twarning：仅显示重要的警告信息</span><br><span class=\"line\">logfile &quot;&quot;\t\t\t# 日志目录</span><br><span class=\"line\">databases 16\t\t\t# 指定数据库的数量</span><br><span class=\"line\">################################ SNAPSHOTTING  ################################</span><br><span class=\"line\">save 900 1\t\t\t# 每900秒(15分钟)至少一次键值变更时被触发</span><br><span class=\"line\">save 300 10\t\t\t# 每300秒(5分钟)至少10次键值变更时被触发</span><br><span class=\"line\">save 60 10000\t\t\t# 每60秒至少10000次键值变更时被触发</span><br><span class=\"line\">stop-writes-on-bgsave-error yes\t# 后台存储错误停止写</span><br><span class=\"line\">rdbcompression yes\t\t# 存储至本地数据库时(持久化到rdb文件)是否压缩数据 默认为 yes</span><br><span class=\"line\">rdbchecksum yes\t\t\t# 读取和写入的时候是否支持CRC64校验 默认是开启的</span><br><span class=\"line\">dbfilename dump.rdb \t\t# 镜像文件的名字</span><br><span class=\"line\">dir ./ \t\t\t\t# 当前工作目录 配置文件和镜像文件等都在此目录下</span><br><span class=\"line\">################################# REPLICATION #################################</span><br><span class=\"line\">slave-serve-stale-data yes\t# 当slave服务器和master服务器失去连接后，</span><br><span class=\"line\">\t\t\t\t或者当数据正在复制传输的时候，如果此参数值设置“yes”</span><br><span class=\"line\">\t\t\t\tslave服务器可以继续接受客户端的请求，</span><br><span class=\"line\">\t\t\t\t否则，会返回给请求的客户端如下信息</span><br><span class=\"line\">\t\t\t\t“SYNC with master in progress”</span><br><span class=\"line\">slave-read-only yes\t\t# 是否允许slave服务器节点只提供读服务</span><br><span class=\"line\">repl-diskless-sync no \t\t# disk较慢，并且网络较快的时候，</span><br><span class=\"line\">\t\t\t\t可以用diskless。（默认用disk-based）</span><br><span class=\"line\">repl-diskless-sync-delay 5\t# 备份等待延迟时间 seconds</span><br><span class=\"line\">repl-disable-tcp-nodelay no \t# 指定向slave同步数据时，是否禁用socket的NO_DELAY选 项。</span><br><span class=\"line\">\t\t\t\t若配置为“yes”，则禁用NO_DELAY，则TCP协议栈会合并小包统一发送，</span><br><span class=\"line\">\t\t\t\t这样可以减少主从节点间的包数量并节省带宽，但会增加数据同步到</span><br><span class=\"line\">\t\t\t\tslave的时间。若配置为“no”，表明启用NO_DELAY，则TCP协议栈不</span><br><span class=\"line\">\t\t\t\t会延迟小包的发送时机，这样数据同步的延时会减少，但需要更大的带宽。</span><br><span class=\"line\">\t\t\t\t通常情况下，应该配置为no以降低同步延时，</span><br><span class=\"line\">\t\t\t\t但在主从节点间网络负载已经很高的情况下，可以配置为yes</span><br><span class=\"line\">slave-priority 100\t\t# 指定slave的优先级。在不只1个slave存在的部署环境下，</span><br><span class=\"line\">\t\t\t\t当master宕机时，Redis Sentinel会将priority值最小的slave</span><br><span class=\"line\">\t\t\t\t提升为master需要注意的是，若该配置项为0，则对应的slave永远</span><br><span class=\"line\">\t\t\t\t不会自动提升为master</span><br><span class=\"line\">############################## APPEND ONLY MODE ###############################</span><br><span class=\"line\">appendonly no \t\t\t# 开启append only 模式之后，redis 会把所接收到的每一次写</span><br><span class=\"line\">\t\t\t\t操作请求都追加到appendonly.aof 文件中，当redis 重新启动时，</span><br><span class=\"line\">\t\t\t\t会从该文件恢复出之前的状态。但是这样会造成appendonly.aof </span><br><span class=\"line\">\t\t\t\t文件过大，所以redis 还支持了BGREWRITEAOF 指令，</span><br><span class=\"line\">\t\t\t\t对appendonly.aof 进行重新整理。默认是不开启的</span><br><span class=\"line\">appendfilename &quot;appendonly.aof&quot;\t# 默认为appendonly.aof</span><br><span class=\"line\">appendfsync everysec\t\t# 设置aof的同步频率，有三种选择</span><br><span class=\"line\">\t\t\t\talways、everysec、no，默认是everysec表示每秒同步一次</span><br><span class=\"line\">no-appendfsync-on-rewrite no \t# 指定是否在后台aof文件rewrite期间调用fsync，</span><br><span class=\"line\">\t\t\t\t默认为no，表示要调用fsync（无论后台是否有子进程在刷盘）。</span><br><span class=\"line\">\t\t\t\tRedis在后台写RDB文件或重写afo文件期间会存在大量磁盘IO，</span><br><span class=\"line\">\t\t\t\t此时，在某些linux系统中，调用fsync可能会阻塞</span><br><span class=\"line\">auto-aof-rewrite-percentage 100 # 指定Redis重写aof文件的条件，默认为100，</span><br><span class=\"line\">\t\t\t\t表示与上次rewrite的aof文件大小相比，当前aof文件增长量超过上</span><br><span class=\"line\">\t\t\t\t次afo文件大小的100%时，就会触发background rewrite。</span><br><span class=\"line\">\t\t\t\t若配置为0，则会禁用自动rewrite</span><br><span class=\"line\">auto-aof-rewrite-min-size 64mb \t# 指定触发rewrite的aof文件大小。</span><br><span class=\"line\">\t\t\t\t若aof文件小于该值，即使当前文件的增量比例达到</span><br><span class=\"line\">\t\t\t\tauto-aof-rewrite-percentage的配置值，也不会触发自动</span><br><span class=\"line\">\t\t\t\trewrite。即这两个配置项同时满足时，才会触发rewrite</span><br><span class=\"line\">aof-load-truncated yes \t\t# 会自动发布一个log给客户端然后load（默认）</span><br><span class=\"line\">\t\t\t\t如果是no，用户必须手动redis-check-aof修复AOF文件才可以</span><br><span class=\"line\">################################ LUA SCRIPTING  ###############################</span><br><span class=\"line\">lua-time-limit 5000 \t\t# 一个Lua脚本最长的执行时间，单位为毫秒</span><br><span class=\"line\">\t\t\t\t如果为0或负数表示无限执行时间，默认为5000</span><br><span class=\"line\">################################## SLOW LOG ###################################</span><br><span class=\"line\">slowlog-log-slower-than 10000 \t# 设定执行时间，单位是微秒，执行时长超过该时间</span><br><span class=\"line\">\t\t\t\t的命令将会被记入log。-1表示不记录slow log; 0强制记录所有命令</span><br><span class=\"line\">slowlog-max-len 128 \t\t# 最多保存 128 条日志</span><br><span class=\"line\">################################ LATENCY MONITOR ##############################</span><br><span class=\"line\">latency-monitor-threshold 0\t# 用LATENCY打印redis实例在跑命令时的耗时图表</span><br><span class=\"line\">\t\t\t\t只记录大于等于下边设置的值的操作。0的话，就是关闭监视。</span><br><span class=\"line\">\t\t\t\t可以动态开启</span><br><span class=\"line\">############################# EVENT NOTIFICATION ##############################</span><br><span class=\"line\">notify-keyspace-events &quot;&quot; \t# 如果开着开关。一个client进行了DEL操作在“foo”key</span><br><span class=\"line\">\t\t\t\t上在database0上。两个消息将会发布通过 </span><br><span class=\"line\">\t\t\t\tpub/sub默认所用的通知被禁用，因为用户通常不需要改特性</span><br><span class=\"line\">\t\t\t\t并且该特性会有性能损耗</span><br><span class=\"line\">############################### ADVANCED CONFIG ###############################</span><br><span class=\"line\">hash-max-ziplist-entries 512 \t# hash类型的数据结构在编码上可以使用</span><br><span class=\"line\">\t\t\t\tziplist和hashtable。ziplist的特点就是文件存储(以及内存存储)</span><br><span class=\"line\">\t\t\t\t所需的空间较小,在内容较小时,性能和hashtable几乎一样.因此redis</span><br><span class=\"line\">\t\t\t\t对hash类型默认采取ziplist。如果hash中条目的条目个数或者value</span><br><span class=\"line\">\t\t\t\t长度达到阀值,将会被重构为hashtable</span><br><span class=\"line\">\t\t\t\t这个参数指的是ziplist中允许存储的最大条目个数</span><br><span class=\"line\">\t\t\t\t默认为512，建议为128</span><br><span class=\"line\">hash-max-ziplist-value 64\t# ziplist中允许条目value值最大字节数，默认为64，建议为1024</span><br><span class=\"line\">list-max-ziplist-size -2 \t# 对于list类型,将会采取ziplist,linkedlist两种编码类型</span><br><span class=\"line\">list-compress-depth 0\t\t# 表示一个quicklist两端不被压缩的节点个数。</span><br><span class=\"line\">\t\t\t\t注：这里的节点个数是指quicklist双向链表的节点个数，</span><br><span class=\"line\">\t\t\t\t而不是指ziplist里面的数据项个数。实际上，一个</span><br><span class=\"line\">\t\t\t\tquicklist节点上的ziplist，如果被压缩，就是整体被压缩的</span><br><span class=\"line\">\t\t\t\t参数list-compress-depth的取值含义如下：</span><br><span class=\"line\">\t\t\t\t0: 是个特殊值，表示都不压缩。这是Redis的默认值。</span><br><span class=\"line\">\t\t\t\t1: 表示quicklist两端各有1个节点不压缩，中间的节点压缩。</span><br><span class=\"line\">\t\t\t\t2: 表示quicklist两端各有2个节点不压缩，中间的节点压缩。</span><br><span class=\"line\">\t\t\t\t3: 表示quicklist两端各有3个节点不压缩，中间的节点压缩。</span><br><span class=\"line\">\t\t\t\t依此类推</span><br><span class=\"line\">\t\t\t\t由于0是个特殊值，很容易看出quicklist的头节点和</span><br><span class=\"line\">\t\t\t\t尾节点总是不被压缩的，以便于在表的两端进行快速存取</span><br><span class=\"line\">set-max-intset-entries 512 \t# 当set类型中的数据都是数值类型，</span><br><span class=\"line\">\t\t\t\t并且set中整型元素的数量不超过指定值时，使用特殊的编码方式</span><br><span class=\"line\">zset-max-ziplist-entries 128 \t# 与hash和list类似 </span><br><span class=\"line\">zset-max-ziplist-value 64 \t# zsort也采用如下的配置来选择是否进行特殊编码来节省空间</span><br><span class=\"line\">hll-sparse-max-bytes 3000 \t# 这个限制包含了16个字节的头部，当一个HyperLogLog</span><br><span class=\"line\">\t\t\t\t使用sparse representation 超过了这个显示，它就会转换到</span><br><span class=\"line\">\t\t\t\tdense representation上</span><br><span class=\"line\">activerehashing yes \t\t# 用来控制是否自动重建hash。Active rehashing每100微秒</span><br><span class=\"line\">\t\t\t\t使用1微秒cpu时间排序，以重组Redis的hash表。重建是通过一种</span><br><span class=\"line\">\t\t\t\tlazy方式，写入hash表的操作越多，需要执行rehashing的步骤</span><br><span class=\"line\">\t\t\t\t也越多，如果服务器当前空闲，那么rehashing操作会一直执行。</span><br><span class=\"line\">\t\t\t\t如果对实时性要求较高，难以接受redis时不时出现的2微秒的延迟，</span><br><span class=\"line\">\t\t\t\t则可以设置activerehashing为no，</span><br><span class=\"line\">\t\t\t\t否则建议设置为yes，以节省内存空间</span><br><span class=\"line\">client-output-buffer-limit normal 0 0 0</span><br><span class=\"line\">client-output-buffer-limit slave 256mb 64mb 60</span><br><span class=\"line\">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class=\"line\">客户端buffer控制。在客户端与server进行的交互中,每个连接都会与一个buffer关联,</span><br><span class=\"line\">此buffer用来队列化等待被client接受的响应信息。如果client不能及时的消费响应信息,</span><br><span class=\"line\">那么buffer将会被不断积压而给server带来内存压力.如果buffer中积压的数据达到阀值,</span><br><span class=\"line\">将会导致连接被关闭,buffer被移除。</span><br><span class=\"line\">buffer控制类型包括:normal -&gt; 普通连接；slave -&gt;与slave之间的连接；</span><br><span class=\"line\">pubsub -&gt;pub/sub类型连接，此类型的连接，往往会产生此种问题;</span><br><span class=\"line\">因为pub端会密集的发布消息,但是sub端可能消费不足.</span><br><span class=\"line\">指令格式:client-output-buffer-limit &lt;class&gt; &lt;hard&gt; &lt;soft&gt; &lt;seconds&gt;&quot;,</span><br><span class=\"line\">其中hard表示buffer最大值,一旦达到阀值将立即关闭连接;</span><br><span class=\"line\">soft表示&quot;容忍值&quot;,它和seconds配合,如果buffer值超过soft且持续时间达到了seconds,</span><br><span class=\"line\">也将立即关闭连接,如果超过了soft但是在seconds之后，buffer数据小于了soft,连接将会被保留.</span><br><span class=\"line\">其中hard和soft都设置为0,则表示禁用buffer控制.通常hard值大于soft</span><br><span class=\"line\">hz 10  \t\t\t\t# Redis server执行后台任务的频率,默认为10,</span><br><span class=\"line\">\t\t\t\t此值越大表示redis对&quot;间歇性task&quot;的执行次数越频繁(次数/秒)。</span><br><span class=\"line\">\t\t\t\t&quot;间歇性task&quot;包括&quot;过期集合&quot;检测、关闭&quot;空闲超时&quot;的连接等,此</span><br><span class=\"line\">\t\t\t\t值必须大于0且小于500。此值过小就意味着更多的cpu周期消耗,</span><br><span class=\"line\">\t\t\t\t后台task被轮询的次数更频繁。此值过大意味着&quot;内存敏感&quot;性较差。</span><br><span class=\"line\">\t\t\t\t建议采用默认值</span><br><span class=\"line\">aof-rewrite-incremental-fsync yes # aof rewrite过程中,是否采取增量文件同步策略</span><br><span class=\"line\">\t\t\t\t默认为“yes”。 rewrite过程中,每32M数据进行一次文件同步</span><br><span class=\"line\">\t\t\t\t这样可以减少aof大文件写入对磁盘的操作次数</span><br></pre></td></tr></table></figure>\n","prev":{"title":"苹果官方鼠标移动速度慢问题解决(Magic Mouse)","link":"magic-mouse"},"next":{"title":"BigDecimal Java 高精度运算","link":"bigdecimal"},"plink":"http://l-zm.com/redis-config-explan/","reading_time":"2712 字约 18 分钟"}